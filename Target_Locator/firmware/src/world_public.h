/* 
 * File:   world_public.h
 * Author: Daniel
 *
 * Created on November 11, 2016, 12:06 AM
 */

#ifndef WORLD_PUBLIC_H
#define	WORLD_PUBLIC_H

#ifdef	__cplusplus
extern "C" {
#endif

#define MIN_WIDTH 10
#define MIN_HEIGHT 10

typedef enum
{
    NOTHING,
    LIGHT_BLUE,
    PINK,
    GREEN,
    ORANGE,
    UNKNOWN
}COLORS;

//lowest end value always comes first
#define GENERATE_ID_FROM_CODE(a, b, c, d) (a*512 + b*64 + c*8 + d)
#define TARGET_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, LIGHT_BLUE, PINK)
#define VERTEX_1_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, LIGHT_BLUE, GREEN)
#define VERTEX_2_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, PINK, GREEN)
#define VERTEX_3_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, LIGHT_BLUE, ORANGE)
#define VERTEX_4_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, PINK, ORANGE)
#define VERTEX_5_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, GREEN, ORANGE)

#define VERTEX_6_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_7_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_8_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_9_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_10_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_11_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_12_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_13_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_14_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_15_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_16_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_17_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_18_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_19_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)
#define VERTEX_20_CODE GENERATE_ID_FROM_CODE(NOTHING, NOTHING, NOTHING, NOTHING)

typedef enum
{
    PIXY_INVALID,
    PIXY_TARGET,
    PIXY_VERTEX_1,
    PIXY_VERTEX_2,
    PIXY_VERTEX_3,
    PIXY_VERTEX_4,
    PIXY_VERTEX_5,
    PIXY_VERTEX_6,
    PIXY_VERTEX_7,
    PIXY_VERTEX_8,
    PIXY_VERTEX_9,
    PIXY_VERTEX_10,
    PIXY_VERTEX_11,
    PIXY_VERTEX_12,
    PIXY_VERTEX_13,
    PIXY_VERTEX_14,
    PIXY_VERTEX_15,
    PIXY_VERTEX_16,
    PIXY_VERTEX_17,
    PIXY_VERTEX_18,
    PIXY_VERTEX_19,
    PIXY_VERTEX_20,
    PIXY_UNKNOWN
}PIXY_IDENTIFIER_t;
typedef enum
{
    VERTEX_1 = VERTEX_1_CODE,
    VERTEX_2 = VERTEX_2_CODE,
    VERTEX_3 = VERTEX_3_CODE,
    VERTEX_4 = VERTEX_4_CODE,
    VERTEX_5 = VERTEX_5_CODE,
}VERTEX_CODE;
typedef struct
{
    uint16_t x_center;
    uint16_t y_center;
    uint16_t width;
    uint16_t height;
    PIXY_IDENTIFIER_t ID;
}PIXY_DATA_t;

typedef struct
{
    PIXY_IDENTIFIER_t ID;
    uint16_t x_center;
    uint16_t y_center;
    int16_t theta;
}PROCESSED_PIXY_ITEM_t;

typedef struct
{
    PIXY_IDENTIFIER_t ID;
    VERTEX_CODE colorBar;
    uint16_t x_center;
    uint16_t y_center;
    bool valid;
}VERTEX_t;

typedef struct
{
    uint16_t x;
    uint16_t y;
    int16_t theta;
    bool valid;
}LOCATION_t;

void getLocation(LOCATION_t *retval);
void setLocation(LOCATION_t location);

#ifdef	__cplusplus
}
#endif

#endif	/* WORLD_PUBLIC_H */

